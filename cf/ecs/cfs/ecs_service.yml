AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VPCStackName:
    Type: String
    Default: esm-lounge-test-vpc

  ALBStackName:
    Type: String
    Default: esm-lounge-test-alb

  RDSStackName:
    Type: String
    Default: esm-lounge-test-rds

  ServiceName:
    Type: String
    Default: Web

  ImageUrl:
    Type: String
    Default: 938859087688.dkr.ecr.ap-northeast-1.amazonaws.com/esm-lounge-test:latest

  ContainerPort:
    Type: Number
    Default: 3000

  ContainerCpu:
    Type: Number
    Default: 256

  ContainerMemory:
    Type: Number
    Default: 512

  Path:
    Type: String
    Default: "*"

  DesiredCount:
    Type: Number
    Default: 2

Resources:

  # TaskDefinition:
  #   Type: AWS::ECS::TaskDefinition
  #   Properties:
  #     Family: db-migrate
  #     Cpu: !Ref 'ContainerCpu'
  #     Memory: !Ref 'ContainerMemory'
  #     NetworkMode: awsvpc
  #     RequiresCompatibilities:
  #       - FARGATE
  #     ExecutionRoleArn:
  #       Fn::ImportValue:
  #         !Join ['-', [!Ref "AWS::Region", !Ref 'ALBStackName', 'ECSTaskExecutionRole']]
  #     TaskRoleArn:
  #       Fn::ImportValue:
  #         !Join ['-', [!Ref "AWS::Region", !Ref 'ALBStackName', 'ECSTaskExecutionRole']]
  #     ContainerDefinitions:
  #       - Name: !Ref 'ServiceName'
  #         Cpu: !Ref 'ContainerCpu'
  #         Memory: !Ref 'ContainerMemory'
  #         Image: !Ref 'ImageUrl'
  #         Command:
  #           - bundle
  #           - exec
  #           - rails
  #           - db:migrate
  #         Environment:
  #           - Name: DATABASE_URL
  #             Value:
  #               Fn::ImportValue:
  #                 !Join ["-", [!Ref "AWS::Region", !Ref "RDSStackName", "DatabaseURL"]]
  #           - Name: RAILS_ENV
  #             Value: production
  #           - Name: RAILS_LOG_TO_STDOUT
  #             Value: "true"
  #           - Name: SECRET_KEY_BASE
  #             Value: "60fa06ddd2d44881c44cde447d0450a144e98878f223bac44cb8e3c52036d01079b4db465358b6e0ae0ec9174b60d8796460ec99ae54a0a8952a546a8ac4e1f3"
  #         LogConfiguration:
  #           LogDriver: awslogs
  #           Options:
  #             awslogs-group: "esm-lounge-test-migrate"
  #             awslogs-region: "ap-northeast-1"
  #             awslogs-stream-prefix: ecs

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join ['-', [!Ref "AWS::Region", !Ref 'ALBStackName', 'ECSRole']]
      TaskRoleArn:
        Fn::ImportValue:
          !Join ['-', [!Ref "AWS::Region", !Ref 'ALBStackName', 'ECSTaskExecutionRole']]
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: !Ref 'ImageUrl'
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
          Command:
            - bundle
            - exec
            - puma -C config/puma.rb
          Environment:
            - Name: DATABASE_URL
              Value:
                Fn::ImportValue:
                  !Join ["-", [!Ref "AWS::Region", !Ref "RDSStackName", "DatabaseURL"]]
            - Name: RAILS_ENV
              Value: production
            - Name: RAILS_LOG_TO_STDOUT
              Value: "true"
            - Name: SECRET_KEY_BASE
              Value: "60fa06ddd2d44881c44cde447d0450a144e98878f223bac44cb8e3c52036d01079b4db465358b6e0ae0ec9174b60d8796460ec99ae54a0a8952a546a8ac4e1f3"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: "esm-lounge-test-migrate"
              awslogs-region: "ap-northeast-1"
              awslogs-stream-prefix: ecs

  Service:
    Type: AWS::ECS::Service
    DependsOn: LoadBalancerRule
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join ['-', [!Ref "AWS::Region", !Ref 'ALBStackName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: !Ref 'DesiredCount'
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref "AWS::Region", !Ref 'ALBStackName', 'ECSRole']]
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join ['-', [!Ref "AWS::Region", !Ref 'ALBStackName', 'FargateContainerSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join ['-', [!Ref "AWS::Region", !Ref 'VPCStackName', 'PrivateSubnet0']]
            - Fn::ImportValue:
                !Join ['-', [!Ref "AWS::Region", !Ref 'VPCStackName', 'PrivateSubnet1']]
      TaskDefinition: !Ref 'TaskDefinition'
      LoadBalancers:
        - ContainerName: !Ref 'ServiceName'
          ContainerPort: !Ref 'ContainerPort'
          TargetGroupArn: !Ref 'TargetGroup'

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: "/hi"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: !Ref 'ServiceName'
      Port: !Ref 'ContainerPort'
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue:
          !Join ['-', [!Ref "AWS::Region", !Ref 'VPCStackName', 'VPC']]

  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref 'TargetGroup'
          Type: 'forward'
      Conditions:
        - Field: path-pattern
          Values: [!Ref 'Path']
      ListenerArn:
        Fn::ImportValue:
          !Join ['-', [!Ref "AWS::Region", !Ref 'ALBStackName', 'PublicListener']]
      Priority: 1
